{"version":3,"sources":["./src/app/account/account-routing.module.ts","./src/app/account/account.module.ts","./src/app/account/layout.component.ts","./src/app/account/layout.component.html","./src/app/account/login.component.ts","./src/app/account/login.component.html","./src/app/account/register.component.ts","./src/app/account/register.component.html"],"names":[],"mappings":"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","file":"account-account-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LayoutComponent } from './layout.component';\r\nimport { LoginComponent } from './login.component';\r\nimport { RegisterComponent } from './register.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: LayoutComponent,\r\n        children: [\r\n            { path: 'login', component: LoginComponent },\r\n            { path: 'register', component: RegisterComponent }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AccountRoutingModule { }","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AccountRoutingModule } from './account-routing.module';\r\nimport { LayoutComponent } from './layout.component';\r\nimport { LoginComponent } from './login.component';\r\nimport { RegisterComponent } from './register.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        AccountRoutingModule\r\n    ],\r\n    declarations: [\r\n        LayoutComponent,\r\n        LoginComponent,\r\n        RegisterComponent\r\n    ]\r\n})\r\nexport class AccountModule { }","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AccountService } from '@app/_services';\r\n\r\n@Component({ templateUrl: 'layout.component.html' })\r\nexport class LayoutComponent {\r\n    constructor(\r\n        private router: Router,\r\n        private accountService: AccountService\r\n    ) {\r\n        // redirect to home if already logged in\r\n        if (this.accountService.userValue) {\r\n            this.router.navigate(['/']);\r\n        }\r\n    }\r\n}","<div class=\"col-md-6 offset-md-3 mt-5\">\r\n    <router-outlet></router-outlet>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService, AlertService } from '@app/_services';\r\n\r\n@Component({ templateUrl: 'login.component.html' ,\r\nstyleUrls: ['./login.component.css']})\r\nexport class LoginComponent implements OnInit {\r\n    form: FormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.form = this.formBuilder.group({\r\n            username: ['', Validators.required],\r\n            password: ['', Validators.required]\r\n        });\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // reset alerts on submit\r\n        this.alertService.clear();\r\n\r\n        // stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        this.accountService.login(this.f.username.value, this.f.password.value)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    // get return url from query parameters or default to home page\r\n                    const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n                    this.router.navigateByUrl(returnUrl);\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n}","\r\n\r\n<div class=\"container\">\r\n\t<div class=\"screen\">\r\n\t\t<div class=\"screen__content\">\r\n            \r\n\t\t\t<form class=\"login\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n                <h4 style=\"color: azure; text-align: center;\">Login Form</h4>\r\n\t\t\t\t<div class=\"login__field\">\r\n\t\t\t\t\t<i class=\"login__icon fas fa-user\"></i>\r\n\t\t\t\t\t<input type=\"text\" class=\"login__input\" formControlName=\"username\" style=\"padding-left: 5px;\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" placeholder=\"Username\">\r\n                    <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n                    </div>\r\n                </div>\r\n\t\t\t\t<div class=\"login__field\">\r\n\t\t\t\t\t<i class=\"login__icon fas fa-lock\"></i>\r\n\t\t\t\t\t<input type=\"password\" class=\"login__input\" formControlName=\"password\" style=\"padding-left: 5px;\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" placeholder=\"Password\">\r\n                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                    </div>\r\n                </div>\r\n\t\t\t\t<button class=\"button login__submit\" [disabled]=\"loading\"  style=\"text-align: center;color:black; padding-left: 100px;\">\r\n\t\t\t\t\t<span  *ngIf=\"loading\" class=\" button__text spinner-border spinner-border-sm mr-1\" style=\"color:black\"></span>\r\n\t\t\t\t\tLogin\r\n\t\t\t\t</button>\t\r\n                <a style=\"color: white; padding-top: 25px;\" routerLink=\"../register\" class=\"btn btn-link\">Register Here.........</a>\t\t\t\r\n\t\t\t</form>\r\n\t\t\t\r\n\t\t</div>\r\n\t\t<div class=\"screen__background\">\r\n\t\t\t\r\n\t\t</div>\t\t\r\n\t</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService, AlertService } from '@app/_services';\r\n\r\n@Component({ templateUrl: 'register.component.html', styleUrls: ['./register.component.css'] })\r\nexport class RegisterComponent implements OnInit {\r\n    form: FormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.form = this.formBuilder.group({\r\n            firstName: ['', Validators.required],\r\n            lastName: ['', Validators.required],\r\n            username: ['', Validators.required],\r\n            password: ['', [Validators.required, Validators.minLength(6)]]\r\n        });\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // reset alerts on submit\r\n        this.alertService.clear();\r\n\r\n        // stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        this.accountService.register(this.form.value)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Registration successful', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../login'], { relativeTo: this.route });\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n}","\r\n\r\n<div class=\"container\">\r\n\t<div class=\"screen\">\r\n\t\t<div class=\"screen__content\">\r\n            \r\n\t\t\t<form class=\"login\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n                <h4 style=\"color: azure; text-align: center;\">Register</h4>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"firstName\"></label>\r\n                    <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" placeholder=\"First Name\" />\r\n                    <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"login__field\">\r\n                    <label for=\"lastName\"></label>\r\n                    <input type=\"text\" formControlName=\"lastName\" class=\" form-control \" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\"  placeholder=\"Last Name\"/>\r\n                    <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\r\n                    </div>\r\n                </div>\r\n\r\n\t\t\t\t<div class=\"login__field\">\r\n\t\t\t\t\t<i class=\"login__icon fas fa-user\"></i>\r\n\t\t\t\t\t<input type=\"text\" class=\"login__input\" formControlName=\"username\" style=\"padding-left: 5px;\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" placeholder=\"Username\">\r\n                    <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n                    </div>\r\n                </div>\r\n\t\t\t\t<div class=\"login__field\">\r\n\t\t\t\t\t<input type=\"password\" class=\"login__input\" formControlName=\"password\" style=\"padding-left: 5px;\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" placeholder=\"Password\">\r\n                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                    </div>\r\n                </div>\r\n\t\t\t\t<button class=\"button login__submit\" [disabled]=\"loading\"  style=\"text-align: center;color:black; padding-left: 100px;\">\r\n\t\t\t\t\t<span  *ngIf=\"loading\" class=\" button__text spinner-border spinner-border-sm mr-1\" style=\"color:black\"></span>\r\n\t\t\t\t\tRegister\r\n\t\t\t\t</button>\t\r\n                <a style=\"color: white; padding-top: 25px;\" routerLink=\"../login\" class=\"btn btn-link\">Login Here.........</a>\t\t\t\r\n                \r\n            \r\n            </form>\r\n\t\t\t\r\n\t\t</div>\r\n\t\t<div class=\"screen__background\">\r\n\t\t\t\r\n\t\t</div>\t\t\r\n\t</div>\r\n</div>\r\n\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}